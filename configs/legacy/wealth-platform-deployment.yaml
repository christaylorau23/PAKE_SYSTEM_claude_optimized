apiVersion: apps/v1
kind: Deployment
metadata:
  name: wealth-platform-api
  namespace: wealth-platform
  labels:
    app: wealth-platform
    component: api-server
    tier: application
spec:
  replicas: 3 # Start with 3 replicas for load distribution
  selector:
    matchLabels:
      app: wealth-platform
      component: api-server
  template:
    metadata:
      labels:
        app: wealth-platform
        component: api-server
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8000'
        prometheus.io/path: '/metrics'
    spec:
      containers:
        - name: wealth-api
          image: wealth-platform:latest
          ports:
            - containerPort: 8000
              name: http
            - containerPort: 8080
              name: metrics
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: wealth-secrets
                  key: database-url
            - name: REDIS_URL
              value: 'redis://redis-service:6379'
            - name: FIRECRAWL_API_KEY
              valueFrom:
                secretKeyRef:
                  name: wealth-secrets
                  key: firecrawl-api-key
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: wealth-secrets
                  key: openai-api-key
            - name: ALPHA_VANTAGE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: wealth-secrets
                  key: alphavantage-api-key
            - name: ENVIRONMENT
              value: 'production'
            - name: LOG_LEVEL
              value: 'INFO'
            - name: MAX_WORKERS
              value: '8'
          resources:
            requests:
              cpu: '4'
              memory: '8Gi'
            limits:
              cpu: '8'
              memory: '16Gi'
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
          volumeMounts:
            - name: app-config
              mountPath: /app/config
            - name: logs
              mountPath: /app/logs
            - name: vector-data
              mountPath: /app/data/vector_intelligence
        - name: wealth-worker
          image: wealth-platform:latest
          command:
            [
              'python',
              '-m',
              'celery',
              'worker',
              '-A',
              'wealth_tasks',
              '--loglevel=info',
            ]
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: wealth-secrets
                  key: database-url
            - name: REDIS_URL
              value: 'redis://redis-service:6379'
            - name: CELERY_BROKER_URL
              value: 'redis://redis-service:6379/1'
            - name: CELERY_RESULT_BACKEND
              value: 'redis://redis-service:6379/2'
          resources:
            requests:
              cpu: '2'
              memory: '4Gi'
            limits:
              cpu: '4'
              memory: '8Gi'
          volumeMounts:
            - name: vector-data
              mountPath: /app/data/vector_intelligence
      volumes:
        - name: app-config
          configMap:
            name: wealth-platform-config
        - name: logs
          emptyDir: {}
        - name: vector-data
          persistentVolumeClaim:
            claimName: vector-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: wealth-platform-service
  namespace: wealth-platform
  labels:
    app: wealth-platform
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: 'nlb'
    service.beta.kubernetes.io/aws-load-balancer-scheme: 'internal'
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
      name: http
    - port: 443
      targetPort: 8000
      protocol: TCP
      name: https
  selector:
    app: wealth-platform
    component: api-server
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vector-data-pvc
  namespace: wealth-platform
spec:
  accessModes:
    - ReadWriteMany # Shared across multiple pods
  resources:
    requests:
      storage: 1Ti # 1TB for vector intelligence data
  storageClassName: fast-ssd
# Secret is now managed by External Secrets Operator
# See external-secrets-operator.yaml for configuration
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wealth-platform-config
  namespace: wealth-platform
data:
  app-config.yaml: |
    # Wealth Platform Configuration
    server:
      host: "0.0.0.0"
      port: 8000
      workers: 8

    performance:
      max_concurrent_requests: 1000
      request_timeout: 30
      keepalive_timeout: 65

    caching:
      redis_url: "redis://redis-service:6379"
      default_ttl: 3600
      max_memory: "8GB"

    database:
      pool_size: 20
      max_overflow: 30
      pool_timeout: 30

    monitoring:
      enable_metrics: true
      metrics_port: 8080
      health_check_interval: 10

    wealth_generation:
      signal_generation_interval: 60  # seconds
      max_signals_per_hour: 50
      min_confidence_threshold: 0.6

    alerts:
      enable_email: true
      enable_sms: false
      enable_webhook: true
      max_alerts_per_hour: 20
