name: Security Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM

permissions:
  contents: read
  security-events: write
  issues: write
  pull-requests: write
  actions: read
  checks: read

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements-test.txt" ]; then
            pip install -r requirements-test.txt
          elif [ -f "pyproject.toml" ]; then
            pip install poetry
            poetry install --with dev
          else
            echo "No dependency file found, installing basic security tools"
            pip install bandit safety
          fi

      - name: Run security tests
        run: |
          if [ -f "scripts/security_testing.py" ]; then
            python scripts/security_testing.py
          elif [ -f "scripts/security_audit.py" ]; then
            python scripts/security_audit.py
          else
            echo "No security testing script found, skipping custom security tests"
          fi

      - name: Run Bandit security linter
        run: |
          if [ -d "src/" ]; then
            bandit -r src/ -f json -o bandit-report.json --skip B101,B601 || true
            echo "Bandit scan completed"
          else
            echo "src/ directory not found, skipping Bandit scan"
          fi

      - name: Run Safety check
        run: |
          if [ -f "requirements-test.txt" ] || [ -f "pyproject.toml" ]; then
            safety check --json --output safety-report.json || true
            echo "Safety check completed"
          else
            echo "No dependency files found, skipping Safety check"
          fi

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            security_test_report.json
            bandit-report.json
            safety-report.json
