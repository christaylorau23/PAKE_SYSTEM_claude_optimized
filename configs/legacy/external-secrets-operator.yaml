apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets-system
  labels:
    name: external-secrets-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-secrets
  namespace: external-secrets-system
  labels:
    app: external-secrets
    component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: external-secrets
  template:
    metadata:
      labels:
        app: external-secrets
    spec:
      serviceAccountName: external-secrets
      containers:
        - name: external-secrets
          image: external-secrets/external-secrets:v0.9.11
          args:
            - --metrics-addr=:8080
            - --enable-leader-election
            - --zap-log-level=info
          ports:
            - containerPort: 8080
              name: metrics
          resources:
            requests:
              cpu: '100m'
              memory: '128Mi'
            limits:
              cpu: '200m'
              memory: '256Mi'
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets
  namespace: external-secrets-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets
rules:
  - apiGroups: ['']
    resources: ['secrets']
    verbs: ['get', 'list', 'watch', 'create', 'update', 'patch', 'delete']
  - apiGroups: ['']
    resources: ['configmaps']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['external-secrets.io']
    resources: ['secretstores', 'clustersecretstores', 'externalsecrets']
    verbs: ['get', 'list', 'watch', 'create', 'update', 'patch', 'delete']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-secrets
subjects:
  - kind: ServiceAccount
    name: external-secrets
    namespace: external-secrets-system
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: vault-backend
spec:
  provider:
    vault:
      server: 'https://vault.wealth-platform.local'
      path: 'secret'
      version: 'v2'
      auth:
        kubernetes:
          mountPath: 'kubernetes'
          role: 'wealth-platform'
          serviceAccountRef:
            name: external-secrets
            namespace: external-secrets-system
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-secret
  namespace: wealth-platform
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: postgres-secret
    creationPolicy: Owner
  data:
    - secretKey: database
      remoteRef:
        key: wealth-platform/postgres
        property: database
    - secretKey: username
      remoteRef:
        key: wealth-platform/postgres
        property: username
    - secretKey: REDACTED_SECRET
      remoteRef:
        key: wealth-platform/postgres
        property: REDACTED_SECRET
    - secretKey: replication-REDACTED_SECRET
      remoteRef:
        key: wealth-platform/postgres
        property: replication-REDACTED_SECRET
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: wealth-secrets
  namespace: wealth-platform
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: wealth-secrets
    creationPolicy: Owner
  data:
    - secretKey: database-url
      remoteRef:
        key: wealth-platform/api
        property: database-url
    - secretKey: firecrawl-api-key
      remoteRef:
        key: wealth-platform/api
        property: firecrawl-api-key
    - secretKey: openai-api-key
      remoteRef:
        key: wealth-platform/api
        property: openai-api-key
    - secretKey: alphavantage-api-key
      remoteRef:
        key: wealth-platform/api
        property: alphavantage-api-key
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: grafana-secret
  namespace: wealth-platform
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: grafana-secret
    creationPolicy: Owner
  data:
    - secretKey: admin-REDACTED_SECRET
      remoteRef:
        key: wealth-platform/grafana
        property: admin-REDACTED_SECRET
