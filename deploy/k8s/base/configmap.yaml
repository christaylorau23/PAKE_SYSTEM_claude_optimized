apiVersion: v1
kind: ConfigMap
metadata:
  name: pake-config
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-config
    app.kubernetes.io/component: configuration
data:
  # Application Configuration
  LOG_LEVEL: 'info'
  MAX_WORKERS: '4'
  CACHE_TTL: '3600'

  # Database Configuration
  DATABASE_HOST: 'postgres-service'
  DATABASE_PORT: '5432'
  DATABASE_NAME: 'pake_system'
  DATABASE_USER: 'pake_user'
  DATABASE_SSL: 'false'
  DATABASE_POOL_SIZE: '10'
  DATABASE_CONNECTION_TIMEOUT: '30000'

  # Redis Configuration
  REDIS_HOST: 'redis-service'
  REDIS_PORT: '6379'
  REDIS_DB: '0'
  REDIS_TTL: '7200'
  REDIS_CLUSTER_MODE: 'false'

  # API Configuration
  API_HOST: '0.0.0.0'
  API_PORT: '8000'
  CORS_ORIGINS: '*'

  # Security Configuration
  SECURITY_HEADERS_ENABLED: 'true'
  RATE_LIMIT_WINDOW: '15'
  RATE_LIMIT_MAX_REQUESTS: '100'

  # JWT Configuration
  JWT_EXPIRATION: '15m'
  JWT_REFRESH_EXPIRATION: '7d'
  JWT_ALGORITHM: 'HS256'

  # Health Check Configuration
  HEALTH_CHECK_TIMEOUT: '5000'
  HEALTH_CHECK_INTERVAL: '30000'

  # Monitoring Configuration
  ENABLE_METRICS: 'true'
  METRICS_PORT: '9090'
  PROMETHEUS_ENDPOINT: '/metrics'
  ENABLE_TRACING: 'false'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: pake-system
  labels:
    app.kubernetes.io/name: postgres-config
    app.kubernetes.io/component: database
data:
  POSTGRES_DB: 'pake_system'
  POSTGRES_USER: 'pake_user'
  PGDATA: '/var/lib/postgresql/data/pgdata'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: pake-system
  labels:
    app.kubernetes.io/name: redis-config
    app.kubernetes.io/component: cache
data:
  redis.conf: |
    appendonly yes
    appendfsync everysec
    save 900 1
    save 300 10
    save 60 10000
    maxmemory-policy allkeys-lru
    tcp-keepalive 60
    timeout 300
