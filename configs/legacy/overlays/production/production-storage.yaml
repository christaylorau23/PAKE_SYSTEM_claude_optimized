apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: pake-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi # Production storage
  storageClassName: fast-ssd-retain
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: pake-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi # Production storage
  storageClassName: fast-ssd-retain
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fast-ssd-retain
  labels:
    app.kubernetes.io/name: pake-system
    app.kubernetes.io/component: storage
provisioner: kubernetes.io/aws-ebs # Adjust for your cloud provider
parameters:
  type: gp3
  iops: '3000'
  throughput: '125'
  encrypted: 'true'
reclaimPolicy: Retain
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pake-shared-storage
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-system
    app.kubernetes.io/component: shared-storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: efs-sc # For shared storage across pods
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: efs-sc
  labels:
    app.kubernetes.io/name: pake-system
    app.kubernetes.io/component: storage
provisioner: efs.csi.aws.com # AWS EFS for shared storage
parameters:
  provisioningMode: efs-ap
  fileSystemId: fs-xxxxxxxxx # Replace with your EFS ID
  directoryPerms: '0755'
reclaimPolicy: Retain
volumeBindingMode: Immediate
