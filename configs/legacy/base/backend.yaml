apiVersion: apps/v1
kind: Deployment
metadata:
  name: pake-backend
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-backend
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: pake-system
    app.kubernetes.io/version: '8.0.0'
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: pake-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pake-backend
        app.kubernetes.io/component: api
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8000'
        prometheus.io/path: '/metrics'
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: pake-backend
          image: pake-system:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
            - containerPort: 8001
              name: websocket
              protocol: TCP
          envFrom:
            - configMapRef:
                name: pake-config
            - secretRef:
                name: pake-secrets
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: app-logs
              mountPath: /app/logs
            - name: app-cache
              mountPath: /app/cache
            - name: app-data
              mountPath: /app/data
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '2Gi'
              cpu: '1000m'
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
          startupProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
      volumes:
        - name: app-logs
          emptyDir: {}
        - name: app-cache
          emptyDir: {}
        - name: app-data
          emptyDir: {}
      terminationGracePeriodSeconds: 30
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: pake-backend-service
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-backend
    app.kubernetes.io/component: api
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      name: http
      protocol: TCP
    - port: 8001
      targetPort: 8001
      name: websocket
      protocol: TCP
  selector:
    app.kubernetes.io/name: pake-backend
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pake-backend-hpa
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-backend
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pake-backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pake-backend-pdb
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-backend
    app.kubernetes.io/component: api
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pake-backend
