apiVersion: v1
kind: ConfigMap
metadata:
  name: pake-config
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-system
    app.kubernetes.io/component: configuration
data:
  # Application Configuration
  ENVIRONMENT: 'production'
  LOG_LEVEL: 'info'
  ENABLE_CORS: 'true'
  MAX_WORKERS: '4'

  # Database Configuration
  DATABASE_HOST: 'postgres-service'
  DATABASE_PORT: '5432'
  DATABASE_NAME: 'pake_system'
  DATABASE_USER: 'pake_user'

  # Redis Configuration
  REDIS_HOST: 'redis-service'
  REDIS_PORT: '6379'
  REDIS_DB: '0'

  # JWT Configuration
  JWT_ALGORITHM: 'HS256'
  JWT_ACCESS_TOKEN_EXPIRE_MINUTES: '30'
  JWT_REFRESH_TOKEN_EXPIRE_DAYS: '7'

  # WebSocket Configuration
  WEBSOCKET_HOST: '0.0.0.0'
  WEBSOCKET_PORT: '8001'

  # Service URLs
  NEXT_PUBLIC_API_URL: 'https://api.pake.example.com'
  NEXT_PUBLIC_WS_URL: 'wss://ws.pake.example.com'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-system
    app.kubernetes.io/component: proxy
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }

    http {
        upstream backend {
            server pake-backend-service:8000;
        }

        upstream frontend {
            server pake-frontend-service:3000;
        }

        upstream websocket {
            server pake-backend-service:8001;
        }

        server {
            listen 80;
            server_name api.pake.example.com;

            location / {
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location /ws {
                proxy_pass http://websocket;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }

        server {
            listen 80;
            server_name pake.example.com;

            location / {
                proxy_pass http://frontend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }
