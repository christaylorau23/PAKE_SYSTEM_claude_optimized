apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pake-ingress
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-system
    app.kubernetes.io/component: ingress
  annotations:
    kubernetes.io/ingress.class: 'nginx'
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: '50m'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/client-body-buffer-size: '1m'
    cert-manager.io/cluster-issuer: 'letsencrypt-prod'
spec:
  tls:
    - hosts:
        - pake.example.com
        - api.pake.example.com
        - ws.pake.example.com
      secretName: pake-tls-secret
  rules:
    - host: pake.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pake-frontend-service
                port:
                  number: 3000
    - host: api.pake.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pake-backend-service
                port:
                  number: 8000
    - host: ws.pake.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pake-backend-service
                port:
                  number: 8001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pake-websocket-ingress
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-system
    app.kubernetes.io/component: websocket-ingress
  annotations:
    kubernetes.io/ingress.class: 'nginx'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    nginx.ingress.kubernetes.io/server-snippets: |
      location /ws {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
      }
    cert-manager.io/cluster-issuer: 'letsencrypt-prod'
spec:
  tls:
    - hosts:
        - ws.pake.example.com
      secretName: pake-ws-tls-secret
  rules:
    - host: ws.pake.example.com
      http:
        paths:
          - path: /ws
            pathType: Prefix
            backend:
              service:
                name: pake-backend-service
                port:
                  number: 8001
