# Argo Rollouts Installation for Advanced Deployment Strategies
apiVersion: v1
kind: Namespace
metadata:
  name: argo-rollouts

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-rollouts
  namespace: argo-rollouts

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-rollouts
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - rollouts
      - rollouts/status
      - rollouts/finalizers
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ''
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
      - update
      - patch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - create
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-rollouts
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-rollouts
subjects:
  - kind: ServiceAccount
    name: argo-rollouts
    namespace: argo-rollouts

---
apiVersion: v1
kind: Secret
metadata:
  name: argo-rollouts-notification-secret
  namespace: argo-rollouts
stringData:
  slack-token: xoxb-your-slack-token

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argo-rollouts-config
  namespace: argo-rollouts
data:
  config.yaml: |
    apiVersion: argoproj.io/v1alpha1
    kind: ConfigMap
    metadata:
      name: argo-rollouts-config
      namespace: argo-rollouts
    data:
      trafficRouterPlugins: |-
        - name: "argoproj-labs/gatewayAPI"
          location: "https://github.com/argoproj-labs/rollouts-plugin-trafficrouter-gatewayapi/releases/download/v0.2.0/gateway-api-plugin-linux-amd64"
      
      metricProviderPlugins: |-
        - name: "argoproj-labs/prometheus"
          location: "https://github.com/argoproj-labs/rollouts-plugin-metric-prometheus/releases/download/v0.1.0/prometheus-plugin-linux-amd64"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-rollouts
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/component: rollouts-controller
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-rollouts
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argo-rollouts
    spec:
      containers:
        - args:
            - --namespaced
            - --loglevel
            - info
            - --kloglevel
            - '0'
            - --rollouts-pod-template-hash-label-key=rollouts-pod-template-hash
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ROLLOUTS_CONFIG_MAP_NAME
              value: argo-rollouts-config
          image: quay.io/argoproj/argo-rollouts:v1.6.0
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
          name: argo-rollouts
          ports:
            - containerPort: 8080
              name: healthz
            - containerPort: 8090
              name: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8090
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      serviceAccountName: argo-rollouts
      securityContext:
        runAsNonRoot: true

---
apiVersion: v1
kind: Service
metadata:
  name: argo-rollouts-metrics
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts-metrics
    app.kubernetes.io/component: server
spec:
  ports:
    - name: metrics
      port: 8090
      protocol: TCP
      targetPort: 8090
  selector:
    app.kubernetes.io/name: argo-rollouts
