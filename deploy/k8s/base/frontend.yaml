apiVersion: apps/v1
kind: Deployment
metadata:
  name: pake-frontend
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-frontend
    app.kubernetes.io/component: web
    app.kubernetes.io/part-of: pake-system
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pake-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pake-frontend
        app.kubernetes.io/component: web
        app.kubernetes.io/version: '1.0.0'
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        fsGroup: 101
      containers:
        - name: pake-frontend
          image: pake-frontend:latest
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          env:
            - name: NODE_ENV
              value: 'production'
            - name: NEXT_PUBLIC_API_BASE_URL
              value: 'http://pake-backend-service:8000'
            - name: PORT
              value: '3000'
          resources:
            requests:
              memory: '256Mi'
              cpu: '100m'
            limits:
              memory: '1Gi'
              cpu: '500m'
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: pake-frontend-service
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-frontend
    app.kubernetes.io/component: web
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: pake-frontend
