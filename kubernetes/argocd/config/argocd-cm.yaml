apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  # ArgoCD server configuration
  url: https://argocd.pake-system.com

  # Git repositories configuration
  repositories: |
    - type: git
      url: https://github.com/pake-system/kubernetes-infrastructure
      name: pake-infrastructure
      project: production
    - type: git
      url: https://github.com/pake-system/pake-api
      name: pake-api
      project: production
    - type: git
      url: https://github.com/pake-system/pake-ai
      name: pake-ai
      project: production
    - type: helm
      url: https://charts.bitnami.com/bitnami
      name: bitnami
    - type: helm
      url: https://helm.elastic.co
      name: elastic

  # OIDC configuration for SSO
  oidc.config: |
    name: PAKE System SSO
    issuer: https://auth.pake-system.com
    clientId: argocd
    clientSecret: $oidc.clientSecret
    requestedScopes: ["openid", "profile", "email", "groups"]
    requestedIDTokenClaims: {"groups": {"essential": true}}

  # Policy configuration
  policy.default: role:readonly
  policy.csv: |
    # Admin role
    p, role:admin, applications, *, */*, allow
    p, role:admin, clusters, *, *, allow
    p, role:admin, repositories, *, *, allow
    p, role:admin, certificates, *, *, allow
    p, role:admin, projects, *, *, allow
    p, role:admin, accounts, *, *, allow
    p, role:admin, gpgkeys, *, *, allow
    p, role:admin, logs, *, *, allow
    p, role:admin, exec, *, */*, allow

    # DevOps role  
    p, role:devops, applications, *, production/*, allow
    p, role:devops, applications, *, staging/*, allow
    p, role:devops, clusters, get, *, allow
    p, role:devops, repositories, *, *, allow
    p, role:devops, exec, create, production/*, allow
    p, role:devops, exec, create, staging/*, allow
    p, role:devops, logs, get, */*, allow

    # Developer role
    p, role:developer, applications, get, */*, allow
    p, role:developer, applications, sync, development/*, allow
    p, role:developer, applications, action/*, development/*, allow
    p, role:developer, repositories, get, *, allow
    p, role:developer, logs, get, development/*, allow

    # SRE role
    p, role:sre, applications, *, */*, allow
    p, role:sre, clusters, get, *, allow
    p, role:sre, repositories, get, *, allow
    p, role:sre, exec, create, */*, allow
    p, role:sre, logs, get, */*, allow

    # Readonly role
    p, role:readonly, applications, get, */*, allow
    p, role:readonly, repositories, get, *, allow
    p, role:readonly, clusters, get, *, allow
    p, role:readonly, logs, get, */*, allow

    # Group bindings
    g, pake-system:admins, role:admin
    g, pake-system:devops, role:devops
    g, pake-system:developers, role:developer
    g, pake-system:sre, role:sre

  # Application configuration
  application.instanceLabelKey: argocd.argoproj.io/instance

  # Server configuration
  server.insecure: false
  server.grpc.web: true
  server.enable.proxy.extension: true

  # Helm configuration
  helm.repositories: |
    - url: https://charts.bitnami.com/bitnami
      name: bitnami
      type: helm
    - url: https://helm.elastic.co
      name: elastic
      type: helm
    - url: https://kubernetes-sigs.github.io/external-dns/
      name: external-dns
      type: helm
    - url: https://charts.jetstack.io
      name: jetstack
      type: helm

  # Kustomize configuration
  kustomize.buildOptions: --enable-helm

  # Git configuration
  timeout.hard.reconciliation: 0
  timeout.reconciliation: 180s

  # Resource exclusions
  resource.exclusions: |
    - apiGroups:
      - cilium.io
      kinds:
      - CiliumIdentity
      clusters:
      - "*"
    - apiGroups:
      - policy
      kinds:
      - PodSecurityPolicy
      clusters:
      - "*"

  # Resource inclusions
  resource.inclusions: |
    - apiGroups:
      - argoproj.io
      kinds:
      - Application
      - ApplicationSet
      - AppProject
      clusters:
      - "*"

  # Notification configuration
  notifications.enabled: true
