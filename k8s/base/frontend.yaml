apiVersion: apps/v1
kind: Deployment
metadata:
  name: pake-frontend
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-frontend
    app.kubernetes.io/component: ui
    app.kubernetes.io/part-of: pake-system
    app.kubernetes.io/version: '8.0.0'
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: pake-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pake-frontend
        app.kubernetes.io/component: ui
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: pake-frontend
          image: pake-frontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          envFrom:
            - configMapRef:
                name: pake-config
          env:
            - name: NODE_ENV
              value: 'production'
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          resources:
            requests:
              memory: '256Mi'
              cpu: '100m'
            limits:
              memory: '1Gi'
              cpu: '500m'
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
      terminationGracePeriodSeconds: 30
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: pake-frontend-service
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-frontend
    app.kubernetes.io/component: ui
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      name: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: pake-frontend
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pake-frontend-hpa
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-frontend
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pake-frontend
  minReplicas: 2
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 25
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60
      selectPolicy: Max
