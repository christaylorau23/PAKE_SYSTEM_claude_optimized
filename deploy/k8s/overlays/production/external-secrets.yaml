# External Secrets Operator Configuration for Production
# This replaces hardcoded secrets with secure external secret management

apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: pake-system
  labels:
    app.kubernetes.io/name: vault-backend
    app.kubernetes.io/component: secrets-management
spec:
  provider:
    vault:
      server: 'https://vault.your-domain.com'
      path: 'secret'
      version: 'v2'
      auth:
        kubernetes:
          mountPath: 'kubernetes'
          role: 'pake-system'
          secretRef:
            name: vault-token
            key: token
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: pake-database-secrets
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-database-secrets
    app.kubernetes.io/component: secrets
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: postgres-secret
    creationPolicy: Owner
    template:
      type: Opaque
  data:
    - secretKey: POSTGRES_PASSWORD
      remoteRef:
        key: pake-system/database
        property: REDACTED_SECRET
    - secretKey: POSTGRES_REPLICATION_PASSWORD
      remoteRef:
        key: pake-system/database
        property: replication_REDACTED_SECRET
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: pake-redis-secrets
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-redis-secrets
    app.kubernetes.io/component: secrets
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: redis-secret
    creationPolicy: Owner
    template:
      type: Opaque
  data:
    - secretKey: REDIS_PASSWORD
      remoteRef:
        key: pake-system/redis
        property: REDACTED_SECRET
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: pake-application-secrets
  namespace: pake-system
  labels:
    app.kubernetes.io/name: pake-application-secrets
    app.kubernetes.io/component: secrets
spec:
  refreshInterval: 30s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: pake-secrets
    creationPolicy: Owner
    template:
      type: Opaque
  data:
    - secretKey: DATABASE_PASSWORD
      remoteRef:
        key: pake-system/database
        property: REDACTED_SECRET
    - secretKey: REDIS_PASSWORD
      remoteRef:
        key: pake-system/redis
        property: REDACTED_SECRET
    - secretKey: JWT_SECRET_KEY
      remoteRef:
        key: pake-system/application
        property: jwt_secret
    - secretKey: FIRECRAWL_API_KEY
      remoteRef:
        key: pake-system/external-apis
        property: firecrawl_key
    - secretKey: OPENAI_API_KEY
      remoteRef:
        key: pake-system/external-apis
        property: openai_key
    - secretKey: ANTHROPIC_API_KEY
      remoteRef:
        key: pake-system/external-apis
        property: anthropic_key
    - secretKey: APP_SECRET_KEY
      remoteRef:
        key: pake-system/application
        property: app_secret
---
# Vault authentication secret (created by Vault setup)
apiVersion: v1
kind: Secret
metadata:
  name: vault-token
  namespace: pake-system
  labels:
    app.kubernetes.io/name: vault-token
    app.kubernetes.io/component: authentication
  annotations:
    kubernetes.io/managed-by: 'vault-operator'
type: Opaque
data:
  token: '' # This will be populated by Vault operator during setup
